// Package v1 provides primitives to interact with the openapi HTTP API.
//
// Code generated by github.com/oapi-codegen/oapi-codegen/v2 version v2.4.1 DO NOT EDIT.
package v1

// Defines values for ForecastAverageWind.
const (
	Calm           ForecastAverageWind = "Calm"
	FreshBreeze    ForecastAverageWind = "Fresh breeze"
	Gale           ForecastAverageWind = "Gale"
	GentleBreeze   ForecastAverageWind = "Gentle breeze"
	Hurricane      ForecastAverageWind = "Hurricane"
	LightAir       ForecastAverageWind = "Light air"
	LightBreeze    ForecastAverageWind = "Light breeze"
	ModerateBreeze ForecastAverageWind = "Moderate breeze"
	NearGale       ForecastAverageWind = "Near gale"
	Storm          ForecastAverageWind = "Storm"
	StrongBreeze   ForecastAverageWind = "Strong breeze"
	StrongGale     ForecastAverageWind = "Strong gale"
	ViolentStorm   ForecastAverageWind = "Violent storm"
)

// Defines values for ForecastGeneralTrend.
const (
	ForecastGeneralTrendDeteriorating ForecastGeneralTrend = "deteriorating"
	ForecastGeneralTrendImproving     ForecastGeneralTrend = "improving"
	ForecastGeneralTrendStable        ForecastGeneralTrend = "stable"
)

// Defines values for PressureTrend.
const (
	PressureTrendFalling        PressureTrend = "falling"
	PressureTrendRising         PressureTrend = "rising"
	PressureTrendSharplyFalling PressureTrend = "sharply falling"
	PressureTrendSharplyRising  PressureTrend = "sharply rising"
	PressureTrendStable         PressureTrend = "stable"
)

// Defines values for TemperatureTrend.
const (
	Falling TemperatureTrend = "falling"
	Rising  TemperatureTrend = "rising"
	Stable  TemperatureTrend = "stable"
)

// CurrentWeather defines model for CurrentWeather.
type CurrentWeather struct {
	// Description Brief textual description of the weather
	Description string `json:"description"`

	// HumidityPercent Relative humidity in percentage
	HumidityPercent *int `json:"humidityPercent,omitempty"`

	// TemperatureCelsius Temperature in Celsius
	TemperatureCelsius *int `json:"temperatureCelsius,omitempty"`

	// WindSpeedKmh Wind speed in km/h
	WindSpeedKmh *int `json:"windSpeedKmh,omitempty"`
}

// Forecast defines model for Forecast.
type Forecast struct {
	// AverageWind Wind level according to the Beaufort scale
	AverageWind ForecastAverageWind `json:"averageWind"`

	// GeneralTrend General trend of the weather
	GeneralTrend ForecastGeneralTrend `json:"generalTrend"`

	// PressureTrend The barometric pressure trend for the forecast.
	PressureTrend PressureTrend `json:"pressureTrend"`

	// TemperatureTrend The temperature trend for the forecast.
	TemperatureTrend TemperatureTrend `json:"temperatureTrend"`
}

// ForecastAverageWind Wind level according to the Beaufort scale
type ForecastAverageWind string

// ForecastGeneralTrend General trend of the weather
type ForecastGeneralTrend string

// PressureTrend The barometric pressure trend for the forecast.
type PressureTrend string

// TemperatureTrend The temperature trend for the forecast.
type TemperatureTrend string

// GetV1WeatherCurrentParams defines parameters for GetV1WeatherCurrent.
type GetV1WeatherCurrentParams struct {
	// City Name of the city to get the weather for
	City string `form:"city" json:"city"`
}

// GetV1WeatherForecastParams defines parameters for GetV1WeatherForecast.
type GetV1WeatherForecastParams struct {
	// Location Name of the city to get the forecast for
	Location string `form:"location" json:"location"`
}
